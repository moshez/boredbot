Deploying a Bored Robot:
* Problem statement: A bored robot (2 minutes)
  * We wrote code for a robot that says it's bored
  * Including a web UI!
  * We want to deploy it
* Meet the robot
  * Backend: Parse.com, REST, token-based (1 minute)
  * Web: Flask, building strings (1 minute)
  * Updater: Loop (1 minute)
* Stage zero -- running the processes (1 minute)
  * Meet __main__
  * Meet mainland
* Stage one -- Process monitoring (2 minutes)
  * Meet NColony
  * NColony configuration generation
  * Starting up
* Stage two -- Secure configuration (3 minutes)
  * Meet PyNaCl
  * Encrypt API keys
  * Decrypt on startup
* Stage three -- One file (3 minutes)
  * Meet Pex
  * Short interlude on Pex internals
  * Building a Pex
* Stage four -- Reproducible build (3 minutes)
  * Meet Docker
  * Using Docker to build
* Stage five -- Dependencies (3 minutes)
  * Meet Docker [again!]
  * ENTRYPOINT
* Stage six -- Fixing the annoying PID 1 (1 minute)
  * Why PID 1 is special
  * NColony.reaper
* What more can be done? (3 minutes)
  * No download on build (download cache)
  * Smaller Docker images
  * Alternative secret key methods
* Summary (1 minute)
  * No secrets in GitHub!
  * No pip install on deploy!
  * It's easy
